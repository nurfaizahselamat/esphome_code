esphome:
    platform: ESP32
    board: esp32dev
    name: esp32-ultrasonic-servo-buzzer
    
# Enable logging
logger: 

sensor:
# HC-SR04
    - platform: ultrasonic
      id: nfs_ultrasonic
      trigger_pin: 26
      echo_pin: 27
      name: "NFS ESPHome Ultrasonic Sensor"
      update_interval: 5s
      timeout: 4.0m
   
interval:                
    - interval: 2s                                                            
      then:    
        if:                                                                               
            condition:
                and:
                - switch.is_on: buzzerswitch
                - sensor.in_range:                                                              
                    id: nfs_ultrasonic
                    below: 0.050                                             
            then:                                                                           
                - rtttl.play: 'siren:d=16,o=6,b=800:b'                                
                - servo.write:
                    id: my_servo
                    level: 100%      
            else:
                - servo.write:
                    id: my_servo
                    level: -100%
                                               
#Servo component configuration entry
servo:
    - id: my_servo
      output: pwm_output
      
# Example output platform
# On ESP32, use ledc output
output:
    - platform: ledc
      id: pwm_output
      pin: 5
      frequency: 50 Hz  
   
#Speaker output
    - platform: ledc
      pin: 25
      id: buzzer_output

rtttl:
    output: buzzer_output
  
switch: 
    - platform: gpio
      pin: 2 #choose a free pin here, just to make ESPHome happy. we do not need it for anything
      name: "Buzzer"
      id: buzzerswitch
      restore_mode: ALWAYS_ON
      

      
    
   